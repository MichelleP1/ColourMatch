package com.example.miche.colormatch;


import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.res.TypedArray;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Point;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.Display;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.SurfaceHolder;
import android.view.SurfaceView;
import android.hardware.Sensor;
import android.hardware.SensorManager;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;

import java.util.Random;

import static java.sql.DriverManager.println;

public class Game extends Activity {

   ImageView imageView;

   //Images
   Bitmap redBitmap;
   Bitmap blueBitmap;
   Bitmap yellowBitmap;
   Bitmap orangeBitmap;
   Bitmap purpleBitmap;
   Bitmap greenBitmap;
   Bitmap switchbuttonBitmap;
   Bitmap switchRedBitmap;
   Bitmap switchBlueBitmap;
   Bitmap switchYellowBitmap;
   Bitmap switchGreenBitmap;
   Bitmap blackBitmap;

   //Display
   Canvas canvas;
   GameView gameView;
   Display display;
   Point size;
   int screenWidth;
   int screenHeight;

   //Frames
   long lastFrameTime;
   int fps;

   int blockLimit = 1000;
   int blockCount;
   int[] blockY = new int [blockLimit];
   int[] blockY2 = new int [blockLimit];

   int[] position = new int [5];
   int[] randomPosition = new int [blockLimit];
   int[] randomPosition2 = new int [blockLimit];

   int[] stop = new int [5];
   int[] end = new int [2];
   int start = 100;

   Bitmap[] color = new Bitmap [6];
   Bitmap[] randomColor = new Bitmap[blockLimit];
   Bitmap[] randomColor2 = new Bitmap[blockLimit];

   boolean switchOne = false;
   boolean switchTwo;
   boolean switchThree;
   boolean switchFour;

   int score = 0;
   int endScore;

   boolean go = false;
   boolean gameOver = false;

   int speed = 10;
   int speedUp = 100;


   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       gameView = new GameView(this);
       setContentView(gameView);
       configureDisplay();

       display = getWindowManager().getDefaultDisplay();
       size = new Point();
       display.getSize(size);
       screenWidth = size.x;
       screenHeight = size.y;



   }



   class GameView extends SurfaceView implements  Runnable{
       Thread ourThread = null;
       SurfaceHolder ourHolder;
       volatile boolean playingGame;
       Paint paint;

       public GameView(Context context) {
           super(context);
           ourHolder = getHolder();
           paint = new Paint();
       }

       @Override
       public void run() {
           while (playingGame) {
               updateGame();
               drawGame();
               //controlFPS();
           }
       }

       public void updateGame() {

           if (!go) {
               setBlocks();
           }

           if (blockY[blockCount] < end[0] && go) {
               blockY[blockCount] = blockY[blockCount] + speed;
           }
           if (blockY2[blockCount] < end[1] && go) {
               blockY2[blockCount] = blockY2[blockCount] + speed;
           }

           if (end[0] <= 100 || end[1] <= 100) {
               endScore = score;
               go = false;
               gameOver = true;
               score = 0;
           }

           if (score == speedUp) {
               speed = speed + 1;
               speedUp  = speedUp + 100;
           }

       }

       public void drawGame() {
           if (ourHolder.getSurface().isValid()) {
               canvas = ourHolder.lockCanvas();
               canvas.drawColor(Color.WHITE);
               paint.setColor(Color.argb(255, 0, 0, 0));
               paint.setTextSize(40);

               ///// Draws Start Screen /////
               if (!go) {

                   //if (!gameOver) {
                       paint.setTextSize(80);
                       canvas.drawRect(screenWidth / 2 - 150, screenHeight / 2 - 300, screenWidth / 2 + 150, screenHeight / 2 - 150, paint);
                       paint.setColor(Color.argb(255, 0, 0, 0));
                       canvas.drawText("Start", screenWidth / 2 - 100, screenHeight / 2 - 200, paint);
                   //}

                   if (gameOver) {
                       paint.setTextSize(90);
                       paint.setColor(Color.argb(255, 255, 255, 255));
                       canvas.drawText("Game Over - " + endScore, 100, screenHeight -150, paint);
                   }
               }

               ///// Draws Play Screen /////
               if (go) {
                   //canvas.drawBitmap(blackBitmap, 0, 1600, paint);
                   canvas.drawBitmap(switchbuttonBitmap, 0, 1600, paint);
                   canvas.drawBitmap(switchbuttonBitmap, 285, 1600, paint);
                   canvas.drawBitmap(switchbuttonBitmap, 560, 1600, paint);
                   canvas.drawBitmap(switchbuttonBitmap, 820, 1600, paint);

                   canvas.drawRect(0,1601,1300,1606, paint);
                   canvas.drawText("Score: " + score, 800, 50, paint);

               }

               ///// Coordinates movement /////
               for (int i = 0; i <= blockCount; i++) {

                   ///// Draws blocks /////
                   if (blockY[i] > start) {
                       canvas.drawBitmap(randomColor[i], randomPosition[i], blockY[i], paint);
                       canvas.drawBitmap(randomColor[i+1], randomPosition[i+1], blockY[i+1], paint);
                   }
                   if (blockY2[i] > start) {
                       canvas.drawBitmap(randomColor2[i], randomPosition2[i], blockY2[i], paint);
                       canvas.drawBitmap(randomColor2[i+1], randomPosition2[i+1], blockY2[i+1], paint);
                   }

                   switchPosition();
                   match();
                   blockBottom();
               }

               ourHolder.unlockCanvasAndPost(canvas);
           }
       }

       public void setBlocks () {
           position[0] = 65;
           position[1] = 265;
           position[2] = 465;
           position[3] = 665;
           position[4] = 865;
           stop[0] = 1500;
           stop[1] = 1500;
           stop[2] = 1500;
           stop[3] = 1500;
           stop[4] = 1500;
           color[0] = redBitmap;
           color[1] = blueBitmap;
           color[2] = yellowBitmap;
           color[3] = greenBitmap;
           color[4] = orangeBitmap;
           color[5] = purpleBitmap;
           end[0] = 1500;
           end[1] = 1500;

           ///// Sets block one /////
           for (int i = 0; i < blockLimit; i++) {
               int rndclr = new Random().nextInt(color.length);
               randomColor[i] = color[rndclr];

               int rnd = new Random().nextInt(position.length);
               randomPosition[i] = position[rnd];

               blockY[i] = start;
           }

           ///// Sets block two /////
           for (int i = 0; i < blockLimit; i++) {
               int rndclr = new Random().nextInt(color.length);
               randomColor2[i] = color[rndclr];

               int rnd = new Random().nextInt(position.length);
               randomPosition2[i] = position[rnd];

               if (randomPosition2[i] == randomPosition[i]) {
                   if (randomPosition2[i] > position[1]) {
                       randomPosition2[i] = position[1];
                   } else {
                       randomPosition2[i] = position[4];
                   }
               }
               blockY2[i] = start;
           }
       }

       public void match () {
           for (int j = 0; j < blockCount; j++) {

               /////Block one new matches block one old /////
               if (blockY[j] - blockY[blockCount] <= 100 && blockY[j] - blockY[blockCount] > 0 && randomColor[j] == randomColor[blockCount] && randomPosition[j] == randomPosition[blockCount]) {

                   score = score + 10;

                   blockY[j] = 2000;
                   blockY[blockCount] = 2000;
                   if (randomPosition[blockCount] == position[0]) {
                       stop[0] = stop[0] + 200;
                   }
                   else if (randomPosition[blockCount] == position[1]) {
                       stop[1] = stop[1] + 200;
                   }
                   else if (randomPosition[blockCount] == position[2]) {
                       stop[2] = stop[2] + 200;
                   }
                   else if (randomPosition[blockCount] == position[3]) {
                       stop[3] = stop[3] + 200;
                   }
                   else if (randomPosition[blockCount] == position[4] ) {
                       stop[4] = stop[4] + 200;
                   }
               }


               ///// Block one new equals block two old /////
               if (blockY2[j] - blockY[blockCount] <= 100 && blockY2[j] - blockY[blockCount] > 0 && randomColor2[j] == randomColor[blockCount] && randomPosition2[j] == randomPosition[blockCount]) {

                   score = score + 10;

                   blockY2[j] = 2000;
                   blockY[blockCount] = 2000;
                   if (randomPosition[blockCount] == position[0]) {
                       stop[0] = stop[0] + 200;
                   }
                   else if (randomPosition[blockCount] == position[1]) {
                       stop[1] = stop[1] + 200;
                   }
                   else if (randomPosition[blockCount] == position[2]) {
                       stop[2] = stop[2] + 200;
                   }
                   else if (randomPosition[blockCount] == position[3]) {
                       stop[3] = stop[3] + 200;
                   }
                   else if (randomPosition[blockCount] == position[4] ) {
                       stop[4] = stop[4] + 200;
                   }
               }


               ///// Block two new matches block one old /////
               if (blockY[j] - blockY2[blockCount] <= 100 && blockY[j] - blockY2[blockCount] > 0 && randomColor[j] == randomColor2[blockCount] && randomPosition[j] == randomPosition2[blockCount]) {

                   score = score + 10;

                   blockY[j] = 2000;
                   blockY2[blockCount] = 2000;
                   if (randomPosition2[blockCount] == position[0]) {
                       stop[0] = stop[0] + 200;
                   }
                   else if (randomPosition2[blockCount] == position[1]) {
                       stop[1] = stop[1] + 200;
                   }
                   else if (randomPosition2[blockCount] == position[2]) {
                       stop[2] = stop[2] + 200;
                   }
                   else if (randomPosition2[blockCount] == position[3]) {
                       stop[3] = stop[3] + 200;
                   }
                   else if (randomPosition2[blockCount] == position[4] ) {
                       stop[4] = stop[4] + 200;
                   }
               }


               ///// Block two new equals block two old /////
               if (blockY2[j] - blockY2[blockCount] <= 100 && blockY2[j] - blockY2[blockCount] > 0 && randomColor2[j] == randomColor2[blockCount] && randomPosition2[j] == randomPosition2[blockCount]) {

                   score = score + 10;

                   blockY2[j] = 2000;
                   blockY2[blockCount] = 2000;
                   if (randomPosition2[blockCount] == position[0]) {
                       stop[0] = stop[0] + 200;
                   }
                   else if (randomPosition2[blockCount] == position[1]) {
                       stop[1] = stop[1] + 200;
                   }
                   else if (randomPosition2[blockCount] == position[2]) {
                       stop[2] = stop[2] + 200;
                   }
                   else if (randomPosition2[blockCount] == position[3]) {
                       stop[3] = stop[3] + 200;
                   }
                   else if (randomPosition2[blockCount] == position[4] ) {
                       stop[4] = stop[4] + 200;
                   }
               }

           }
       }

       public void blockBottom () {
           if (blockY[blockCount] >= end[0] && blockY2[blockCount] >= end[1]) {

               score ++;
               blockCount++;

               ///// Block One Change Stop /////
               if (randomPosition[blockCount - 1] == position[0]) {
                   stop[0] = stop[0] - 100;
               }
               else if (randomPosition[blockCount - 1] == position[1]) {
                   stop[1] = stop[1] - 100;
               }
               else if (randomPosition[blockCount - 1] == position[2]) {
                   stop[2] = stop[2] - 100;
               }
               else if (randomPosition[blockCount - 1] == position[3]) {
                   stop[3] = stop[3] - 100;
               }
               else if (randomPosition[blockCount - 1] == position[4] ) {
                   stop[4] = stop[4] - 100;
               }

               ///// Block Two Change Stop /////
               if (randomPosition2[blockCount - 1] == position[0]) {
                   stop[0] = stop[0] - 100;
               }
               else if (randomPosition2[blockCount - 1] == position[1]) {
                   stop[1] = stop[1] - 100;
               }
               else if (randomPosition2[blockCount - 1] == position[2]) {
                   stop[2] = stop[2] - 100;
               }
               else if (randomPosition2[blockCount - 1] == position[3]) {
                   stop[3] = stop[3] - 100;
               }
               else if (randomPosition2[blockCount - 1] == position[4] ) {
                   stop[4] = stop[4] - 100;
               }

               ///// Block One End /////
               if (randomPosition[blockCount] == position[0]) {
                   end[0] = stop[0];
               }
               else if (randomPosition[blockCount] == position[1]) {
                   end[0] = stop[1];
               }
               else if (randomPosition[blockCount] == position[2]) {
                   end[0] = stop[2];
               }
               else if (randomPosition[blockCount] == position[3]) {
                   end[0] = stop[3];
               }
               else if (randomPosition[blockCount] == position[4] ) {
                   end[0] = stop[4];
               }

               ///// Block Two End /////
               if (randomPosition2[blockCount] == position[0]) {
                   end[1] = stop[0];
               }
               else if (randomPosition2[blockCount] == position[1]) {
                   end[1] = stop[1];
               }
               else if (randomPosition2[blockCount] == position[2]) {
                   end[1] = stop[2];
               }
               else if (randomPosition2[blockCount] == position[3]) {
                   end[1] = stop[3];
               }
               else if (randomPosition2[blockCount] == position[4] ) {
                   end[1] = stop[4];
               }
           }
       }

       public void switchPosition () {
           int changeOne;
           int changeTwo;

           ///// Switch One /////
           if (switchOne) {
               if (randomPosition[blockCount] == position[0] && randomPosition2[blockCount] == position[1]) {
                   if (stop[1] - blockY[blockCount] > 100 && stop[0] - blockY2[blockCount] > 100 &&
                           stop[0] - blockY[blockCount] > 100 && stop[1] - blockY2[blockCount] > 100) {
                       for (int s = 0; s < blockCount; s++) {
                           if (randomPosition[s] == position[0]) {
                               randomPosition[s] = position[1];
                           } else if (randomPosition[s] == position[1]) {
                               randomPosition[s] = position[0];
                           }
                           if (randomPosition2[s] == position[0]) {
                               randomPosition2[s] = position[1];
                           } else if (randomPosition2[s] == position[1]) {
                               randomPosition2[s] = position[0];
                           }
                       }
                       changeOne = stop[0];
                       changeTwo = stop[1];
                       stop[0] = changeTwo;
                       stop[1] = changeOne;
                       end[0] = stop[0];
                       end[1] = stop[1];
                       switchOne = false;
                   }
               }

               if (randomPosition[blockCount] == position[1] && randomPosition2[blockCount] == position[0]) {
                   if (stop[0] - blockY[blockCount] > 100 && stop[1] - blockY2[blockCount] > 100 &&
                           stop[1] - blockY[blockCount] > 100 && stop[0] - blockY2[blockCount] > 100) {
                       for (int s = 0; s < blockCount; s++) {
                           if (randomPosition[s] == position[0]) {
                               randomPosition[s] = position[1];
                           } else if (randomPosition[s] == position[1]) {
                               randomPosition[s] = position[0];
                           }
                           if (randomPosition2[s] == position[0]) {
                               randomPosition2[s] = position[1];
                           } else if (randomPosition2[s] == position[1]) {
                               randomPosition2[s] = position[0];
                           }
                       }
                       changeOne = stop[0];
                       changeTwo = stop[1];
                       stop[0] = changeTwo;
                       stop[1] = changeOne;
                       end[0] = stop[1];
                       end[1] = stop[0];
                       switchOne = false;
                   }

               } else if ((randomPosition[blockCount] == position[0] && randomPosition2[blockCount] != position[1]) ||
                       (randomPosition[blockCount] == position[1] && randomPosition2[blockCount] != position[0])) {
                   if (randomPosition[blockCount] == position[0]) {
                       if (stop[1] - blockY[blockCount] > 50 && stop[0] - blockY[blockCount] > 50) {
                           for (int s = 0; s < blockCount; s++) {
                               if (randomPosition[s] == position[0]) {
                                   randomPosition[s] = position[1];
                               } else if (randomPosition[s] == position[1]) {
                                   randomPosition[s] = position[0];
                               }
                               if (randomPosition2[s] == position[0]) {
                                   randomPosition2[s] = position[1];
                               } else if (randomPosition2[s] == position[1]) {
                                   randomPosition2[s] = position[0];
                               }
                           }
                           changeOne = stop[0];
                           changeTwo = stop[1];
                           stop[0] = changeTwo;
                           stop[1] = changeOne;
                           if (randomPosition[blockCount] == position[0]) {
                               end[0] = stop[0];
                           }
                           if (randomPosition[blockCount] == position[1]) {
                               end[0] = stop[1];
                           }

                       }
                   }
                   if (randomPosition[blockCount] == position[1]) {
                       if (stop[0] - blockY[blockCount] > 50 && stop[1] - blockY[blockCount] > 50) {
                           for (int s = 0; s < blockCount; s++) {
                               if (randomPosition[s] == position[0]) {
                                   randomPosition[s] = position[1];
                               } else if (randomPosition[s] == position[1]) {
                                   randomPosition[s] = position[0];
                               }
                               if (randomPosition2[s] == position[0]) {
                                   randomPosition2[s] = position[1];
                               } else if (randomPosition2[s] == position[1]) {
                                   randomPosition2[s] = position[0];
                               }
                           }
                           changeOne = stop[0];
                           changeTwo = stop[1];
                           stop[0] = changeTwo;
                           stop[1] = changeOne;
                           if (randomPosition[blockCount] == position[0]) {
                               end[0] = stop[0];
                           }
                           if (randomPosition[blockCount] == position[1]) {
                               end[0] = stop[1];
                           }
                       }
                   }

                   switchOne = false;
               } else if ((randomPosition2[blockCount] == position[0] && randomPosition[blockCount] != position[1])
                       || (randomPosition2[blockCount] == position[1] && randomPosition[blockCount] != position[0])) {
                   if (randomPosition2[blockCount] == position[0]) {
                       if (stop[1] - blockY2[blockCount] > 50 && stop[0] - blockY2[blockCount] > 50) {
                           for (int s = 0; s < blockCount; s++) {
                               if (randomPosition[s] == position[0]) {
                                   randomPosition[s] = position[1];
                               } else if (randomPosition[s] == position[1]) {
                                   randomPosition[s] = position[0];
                               }
                               if (randomPosition2[s] == position[0]) {
                                   randomPosition2[s] = position[1];
                               } else if (randomPosition2[s] == position[1]) {
                                   randomPosition2[s] = position[0];
                               }
                           }
                           changeOne = stop[0];
                           changeTwo = stop[1];
                           stop[0] = changeTwo;
                           stop[1] = changeOne;
                           if (randomPosition2[blockCount] == position[0]) {
                               end[1] = stop[0];
                           }
                           if (randomPosition2[blockCount] == position[1]) {
                               end[1] = stop[1];
                           }
                       }
                   }
                   if (randomPosition2[blockCount] == position[1]) {
                       if (stop[0] - blockY2[blockCount] > 50 && stop[1] - blockY2[blockCount] > 50) {
                           for (int s = 0; s < blockCount; s++) {
                               if (randomPosition[s] == position[0]) {
                                   randomPosition[s] = position[1];
                               } else if (randomPosition[s] == position[1]) {
                                   randomPosition[s] = position[0];
                               }
                               if (randomPosition2[s] == position[0]) {
                                   randomPosition2[s] = position[1];
                               } else if (randomPosition2[s] == position[1]) {
                                   randomPosition2[s] = position[0];
                               }

                           }
                           changeOne = stop[0];
                           changeTwo = stop[1];
                           stop[0] = changeTwo;
                           stop[1] = changeOne;
                           if (randomPosition2[blockCount] == position[0]) {
                               end[1] = stop[0];
                           }
                           if (randomPosition2[blockCount] == position[1]) {
                               end[1] = stop[1];
                           }
                       }
                   }

                   switchOne = false;
               }


               if (randomPosition[blockCount] != position[0] && randomPosition[blockCount] != position[1] &&
                       randomPosition2[blockCount] != position[0] && randomPosition2[blockCount] != position[1]) {
                   for (int s = 0; s < blockCount; s++) {

                       if (randomPosition[s] == position[0]) {
                           randomPosition[s] = position[1];
                       } else if (randomPosition[s] == position[1]) {
                           randomPosition[s] = position[0];
                       }
                       if (randomPosition2[s] == position[0]) {
                           randomPosition2[s] = position[1];
                       } else if (randomPosition2[s] == position[1]) {
                           randomPosition2[s] = position[0];
                       }
                   }
                   changeOne = stop[0];
                   changeTwo = stop[1];
                   stop[0] = changeTwo;
                   stop[1] = changeOne;

                   switchOne = false;
               }

           }

           ///// Switch Two /////
           if (switchTwo) {

               if (randomPosition[blockCount] == position[1] && randomPosition2[blockCount] == position[2]) {
                   if (stop[2] - blockY[blockCount] > 100 && stop[1] - blockY2[blockCount] > 100 &&
                           stop[1] - blockY[blockCount] > 100 && stop[2] - blockY2[blockCount] > 100) {
                       for (int s = 0; s < blockCount; s++) {
                           if (randomPosition[s] == position[1]) {
                               randomPosition[s] = position[2];
                           } else if (randomPosition[s] == position[2]) {
                               randomPosition[s] = position[1];
                           }
                           if (randomPosition2[s] == position[1]) {
                               randomPosition2[s] = position[2];
                           } else if (randomPosition2[s] == position[2]) {
                               randomPosition2[s] = position[1];
                           }
                       }
                       changeOne = stop[1];
                       changeTwo = stop[2];
                       stop[1] = changeTwo;
                       stop[2] = changeOne;
                       end[0] = stop[1];
                       end[1] = stop[2];
                       switchTwo = false;
                   }
               }

               if (randomPosition[blockCount] == position[2] && randomPosition2[blockCount] == position[1]) {
                   if (stop[1] - blockY[blockCount] > 100 && stop[2] - blockY2[blockCount] > 100 &&
                           stop[2] - blockY[blockCount] > 100 && stop[1] - blockY2[blockCount] > 100) {
                       for (int s = 0; s < blockCount; s++) {
                           if (randomPosition[s] == position[1]) {
                               randomPosition[s] = position[2];
                           } else if (randomPosition[s] == position[2]) {
                               randomPosition[s] = position[1];
                           }
                           if (randomPosition2[s] == position[1]) {
                               randomPosition2[s] = position[2];
                           } else if (randomPosition2[s] == position[2]) {
                               randomPosition2[s] = position[1];
                           }
                       }
                       changeOne = stop[1];
                       changeTwo = stop[2];
                       stop[1] = changeTwo;
                       stop[2] = changeOne;
                       end[0] = stop[2];
                       end[1] = stop[1];
                       switchTwo = false;
                   }

               } else if ((randomPosition[blockCount] == position[1] && randomPosition2[blockCount] != position[2]) ||
                       (randomPosition[blockCount] == position[2] && randomPosition2[blockCount] != position[1])) {
                   if (randomPosition[blockCount] == position[1]) {
                       if (stop[2] - blockY[blockCount] > 50 && stop[1] - blockY[blockCount] > 50) {
                           for (int s = 0; s < blockCount; s++) {
                               if (randomPosition[s] == position[1]) {
                                   randomPosition[s] = position[2];
                               } else if (randomPosition[s] == position[2]) {
                                   randomPosition[s] = position[1];
                               }
                               if (randomPosition2[s] == position[1]) {
                                   randomPosition2[s] = position[2];
                               } else if (randomPosition2[s] == position[2]) {
                                   randomPosition2[s] = position[1];
                               }
                           }
                           changeOne = stop[1];
                           changeTwo = stop[2];
                           stop[1] = changeTwo;
                           stop[2] = changeOne;
                           if (randomPosition[blockCount] == position[1]) {
                               end[0] = stop[1];
                           }
                           if (randomPosition[blockCount] == position[2]) {
                               end[0] = stop[2];
                           }
                       }
                   }
                   if (randomPosition[blockCount] == position[2]) {
                       if (stop[1] - blockY[blockCount] > 50 && stop[2] - blockY[blockCount] > 50) {
                           for (int s = 0; s < blockCount; s++) {
                               if (randomPosition[s] == position[1]) {
                                   randomPosition[s] = position[2];
                               } else if (randomPosition[s] == position[2]) {
                                   randomPosition[s] = position[1];
                               }
                               if (randomPosition2[s] == position[1]) {
                                   randomPosition2[s] = position[2];
                               } else if (randomPosition2[s] == position[2]) {
                                   randomPosition2[s] = position[1];
                               }
                           }
                           changeOne = stop[1];
                           changeTwo = stop[2];
                           stop[1] = changeTwo;
                           stop[2] = changeOne;
                           if (randomPosition[blockCount] == position[1]) {
                               end[0] = stop[1];
                           }
                           if (randomPosition[blockCount] == position[2]) {
                               end[0] = stop[2];
                           }
                       }
                   }

                   switchTwo = false;
               } else if ((randomPosition2[blockCount] == position[1] && randomPosition[blockCount] != position[2])
                       || (randomPosition2[blockCount] == position[2] && randomPosition[blockCount] != position[1])) {
                   if (randomPosition2[blockCount] == position[1]) {
                       if (stop[2] - blockY2[blockCount] > 50 && stop[1] - blockY2[blockCount] > 50) {
                           for (int s = 0; s < blockCount; s++) {
                               if (randomPosition[s] == position[1]) {
                                   randomPosition[s] = position[2];
                               } else if (randomPosition[s] == position[2]) {
                                   randomPosition[s] = position[1];
                               }
                               if (randomPosition2[s] == position[1]) {
                                   randomPosition2[s] = position[2];
                               } else if (randomPosition2[s] == position[2]) {
                                   randomPosition2[s] = position[1];
                               }
                           }
                           changeOne = stop[1];
                           changeTwo = stop[2];
                           stop[1] = changeTwo;
                           stop[2] = changeOne;
                           if (randomPosition2[blockCount] == position[1]) {
                               end[1] = stop[1];
                           }
                           if (randomPosition2[blockCount] == position[2]) {
                               end[1] = stop[2];
                           }
                       }
                   }
                   if (randomPosition2[blockCount] == position[2]) {
                       if (stop[1] - blockY2[blockCount] > 50 && stop[2] - blockY2[blockCount] > 50) {
                           for (int s = 0; s < blockCount; s++) {
                               if (randomPosition[s] == position[1]) {
                                   randomPosition[s] = position[2];
                               } else if (randomPosition[s] == position[2]) {
                                   randomPosition[s] = position[1];
                               }
                               if (randomPosition2[s] == position[1]) {
                                   randomPosition2[s] = position[2];
                               } else if (randomPosition2[s] == position[2]) {
                                   randomPosition2[s] = position[1];
                               }

                           }
                           changeOne = stop[1];
                           changeTwo = stop[2];
                           stop[1] = changeTwo;
                           stop[2] = changeOne;
                           if (randomPosition2[blockCount] == position[1]) {
                               end[1] = stop[1];
                           }
                           if (randomPosition2[blockCount] == position[2]) {
                               end[1] = stop[2];
                           }
                       }
                   }

                   switchTwo = false;
               }


               if (randomPosition[blockCount] != position[1] && randomPosition[blockCount] != position[2] &&
                       randomPosition2[blockCount] != position[1] && randomPosition2[blockCount] != position[2]) {
                   for (int s = 0; s < blockCount; s++) {

                       if (randomPosition[s] == position[1]) {
                           randomPosition[s] = position[2];
                       } else if (randomPosition[s] == position[2]) {
                           randomPosition[s] = position[1];
                       }
                       if (randomPosition2[s] == position[1]) {
                           randomPosition2[s] = position[2];
                       } else if (randomPosition2[s] == position[2]) {
                           randomPosition2[s] = position[1];
                       }
                   }
                   changeOne = stop[1];
                   changeTwo = stop[2];
                   stop[1] = changeTwo;
                   stop[2] = changeOne;

                   switchTwo = false;
               }
           }

           ///// Switch Three /////
           if (switchThree) {

                   if (randomPosition[blockCount] == position[2] && randomPosition2[blockCount] == position[3]) {
                       if (stop[3] - blockY[blockCount] > 100 && stop[2] - blockY2[blockCount] > 100 &&
                               stop[2] - blockY[blockCount] > 100 && stop[3] - blockY2[blockCount] > 100) {
                           for (int s = 0; s < blockCount; s++) {
                               if (randomPosition[s] == position[2]) {
                                   randomPosition[s] = position[3];
                               } else if (randomPosition[s] == position[3]) {
                                   randomPosition[s] = position[2];
                               }
                               if (randomPosition2[s] == position[2]) {
                                   randomPosition2[s] = position[3];
                               } else if (randomPosition2[s] == position[3]) {
                                   randomPosition2[s] = position[2];
                               }
                           }
                           changeOne = stop[2];
                           changeTwo = stop[3];
                           stop[2] = changeTwo;
                           stop[3] = changeOne;
                           end[0] = stop[2];
                           end[1] = stop[3];
                           switchThree = false;
                       }
                   }

                   if (randomPosition[blockCount] == position[3] && randomPosition2[blockCount] == position[2]) {
                       if (stop[2] - blockY[blockCount] > 100 && stop[3] - blockY2[blockCount] > 100 &&
                               stop[3] - blockY[blockCount] > 100 && stop[2] - blockY2[blockCount] > 100) {
                           for (int s = 0; s < blockCount; s++) {
                               if (randomPosition[s] == position[2]) {
                                   randomPosition[s] = position[3];
                               } else if (randomPosition[s] == position[3]) {
                                   randomPosition[s] = position[2];
                               }
                               if (randomPosition2[s] == position[2]) {
                                   randomPosition2[s] = position[3];
                               } else if (randomPosition2[s] == position[3]) {
                                   randomPosition2[s] = position[2];
                               }
                           }
                           changeOne = stop[2];
                           changeTwo = stop[3];
                           stop[2] = changeTwo;
                           stop[3] = changeOne;
                           end[0] = stop[3];
                           end[1] = stop[2];
                           switchThree = false;
                       }

                   } else if ((randomPosition[blockCount] == position[2] && randomPosition2[blockCount] != position[3]) ||
                           (randomPosition[blockCount] == position[3] && randomPosition2[blockCount] != position[2])) {
                       if (randomPosition[blockCount] == position[2]) {
                           if (stop[3] - blockY[blockCount] > 50 && stop[2] - blockY[blockCount] > 50) {
                               for (int s = 0; s < blockCount; s++) {
                                   if (randomPosition[s] == position[2]) {
                                       randomPosition[s] = position[3];
                                   } else if (randomPosition[s] == position[3]) {
                                       randomPosition[s] = position[2];
                                   }
                                   if (randomPosition2[s] == position[2]) {
                                       randomPosition2[s] = position[3];
                                   } else if (randomPosition2[s] == position[3]) {
                                       randomPosition2[s] = position[2];
                                   }
                               }
                               changeOne = stop[2];
                               changeTwo = stop[3];
                               stop[2] = changeTwo;
                               stop[3] = changeOne;
                               if (randomPosition[blockCount] == position[2]) {
                                   end[0] = stop[2];
                               }
                               if (randomPosition[blockCount] == position[3]) {
                                   end[0] = stop[3];
                               }
                           }
                       }
                       if (randomPosition[blockCount] == position[3]) {
                           if (stop[2] - blockY[blockCount] > 50 && stop[3] - blockY[blockCount] > 50) {
                               for (int s = 0; s < blockCount; s++) {
                                   if (randomPosition[s] == position[2]) {
                                       randomPosition[s] = position[3];
                                   } else if (randomPosition[s] == position[3]) {
                                       randomPosition[s] = position[2];
                                   }
                                   if (randomPosition2[s] == position[2]) {
                                       randomPosition2[s] = position[3];
                                   } else if (randomPosition2[s] == position[3]) {
                                       randomPosition2[s] = position[2];
                                   }
                               }
                               changeOne = stop[2];
                               changeTwo = stop[3];
                               stop[2] = changeTwo;
                               stop[3] = changeOne;
                               if (randomPosition[blockCount] == position[2]) {
                                   end[0] = stop[2];
                               }
                               if (randomPosition[blockCount] == position[3]) {
                                   end[0] = stop[3];
                               }
                           }
                       }

                       switchThree = false;
                   } else if ((randomPosition2[blockCount] == position[2] && randomPosition[blockCount] != position[3])
                           || (randomPosition2[blockCount] == position[3] && randomPosition[blockCount] != position[2])) {
                       if (randomPosition2[blockCount] == position[2]) {
                           if (stop[3] - blockY2[blockCount] > 50 && stop[2] - blockY2[blockCount] > 50) {
                               for (int s = 0; s < blockCount; s++) {
                                   if (randomPosition[s] == position[2]) {
                                       randomPosition[s] = position[3];
                                   } else if (randomPosition[s] == position[3]) {
                                       randomPosition[s] = position[2];
                                   }
                                   if (randomPosition2[s] == position[2]) {
                                       randomPosition2[s] = position[3];
                                   } else if (randomPosition2[s] == position[3]) {
                                       randomPosition2[s] = position[2];
                                   }
                               }
                               changeOne = stop[2];
                               changeTwo = stop[3];
                               stop[2] = changeTwo;
                               stop[3] = changeOne;
                               if (randomPosition2[blockCount] == position[2]) {
                                   end[1] = stop[2];
                               }
                               if (randomPosition2[blockCount] == position[3]) {
                                   end[1] = stop[3];
                               }
                           }
                       }
                       if (randomPosition2[blockCount] == position[3]) {
                           if (stop[2] - blockY2[blockCount] > 50 && stop[3] - blockY2[blockCount] > 50) {
                               for (int s = 0; s < blockCount; s++) {
                                   if (randomPosition[s] == position[2]) {
                                       randomPosition[s] = position[3];
                                   } else if (randomPosition[s] == position[3]) {
                                       randomPosition[s] = position[2];
                                   }
                                   if (randomPosition2[s] == position[2]) {
                                       randomPosition2[s] = position[3];
                                   } else if (randomPosition2[s] == position[3]) {
                                       randomPosition2[s] = position[2];
                                   }

                               }
                               changeOne = stop[2];
                               changeTwo = stop[3];
                               stop[2] = changeTwo;
                               stop[3] = changeOne;
                               if (randomPosition2[blockCount] == position[2]) {
                                   end[1] = stop[2];
                               }
                               if (randomPosition2[blockCount] == position[3]) {
                                   end[1] = stop[3];
                               }
                           }
                       }

                       switchThree = false;
                   }


                   if (randomPosition[blockCount] != position[2] && randomPosition[blockCount] != position[3] &&
                           randomPosition2[blockCount] != position[2] && randomPosition2[blockCount] != position[3]) {
                       for (int s = 0; s < blockCount; s++) {

                           if (randomPosition[s] == position[2]) {
                               randomPosition[s] = position[3];
                           } else if (randomPosition[s] == position[3]) {
                               randomPosition[s] = position[2];
                           }
                           if (randomPosition2[s] == position[2]) {
                               randomPosition2[s] = position[3];
                           } else if (randomPosition2[s] == position[3]) {
                               randomPosition2[s] = position[2];
                           }
                       }
                       changeOne = stop[2];
                       changeTwo = stop[3];
                       stop[2] = changeTwo;
                       stop[3] = changeOne;

                       switchThree = false;
                   }

           }

           ///// Switch Four /////
           if (switchFour) {
               if (randomPosition[blockCount] == position[3] && randomPosition2[blockCount] == position[4]) {
                   if (stop[4] - blockY[blockCount] > 100 && stop[3] - blockY2[blockCount] > 100 &&
                           stop[3] - blockY[blockCount] > 100 && stop[4] - blockY2[blockCount] > 100) {
                       for (int s = 0; s < blockCount; s++) {
                           if (randomPosition[s] == position[3]) {
                               randomPosition[s] = position[4];
                           } else if (randomPosition[s] == position[4]) {
                               randomPosition[s] = position[3];
                           }
                           if (randomPosition2[s] == position[3]) {
                               randomPosition2[s] = position[4];
                           } else if (randomPosition2[s] == position[4]) {
                               randomPosition2[s] = position[3];
                           }
                       }
                       changeOne = stop[3];
                       changeTwo = stop[4];
                       stop[3] = changeTwo;
                       stop[4] = changeOne;
                       end[0] = stop[3];
                       end[1] = stop[4];
                       switchFour = false;
                   }
               }

               if (randomPosition[blockCount] == position[4] && randomPosition2[blockCount] == position[3]) {
                   if (stop[3] - blockY[blockCount] > 100 && stop[4] - blockY2[blockCount] > 100 &&
                           stop[4] - blockY[blockCount] > 100 && stop[3] - blockY2[blockCount] > 100) {
                       for (int s = 0; s < blockCount; s++) {
                           if (randomPosition[s] == position[3]) {
                               randomPosition[s] = position[4];
                           } else if (randomPosition[s] == position[4]) {
                               randomPosition[s] = position[3];
                           }
                           if (randomPosition2[s] == position[3]) {
                               randomPosition2[s] = position[4];
                           } else if (randomPosition2[s] == position[4]) {
                               randomPosition2[s] = position[3];
                           }
                       }
                       changeOne = stop[3];
                       changeTwo = stop[4];
                       stop[3] = changeTwo;
                       stop[4] = changeOne;
                       end[0] = stop[4];
                       end[1] = stop[3];
                       switchFour = false;
                   }

               } else if ((randomPosition[blockCount] == position[3] && randomPosition2[blockCount] != position[4]) ||
                       (randomPosition[blockCount] == position[4] && randomPosition2[blockCount] != position[3])) {
                   if (randomPosition[blockCount] == position[3]) {
                       if (stop[4] - blockY[blockCount] > 50 && stop[3] - blockY[blockCount] > 50) {
                           for (int s = 0; s < blockCount; s++) {
                               if (randomPosition[s] == position[3]) {
                                   randomPosition[s] = position[4];
                               } else if (randomPosition[s] == position[4]) {
                                   randomPosition[s] = position[3];
                               }
                               if (randomPosition2[s] == position[3]) {
                                   randomPosition2[s] = position[4];
                               } else if (randomPosition2[s] == position[4]) {
                                   randomPosition2[s] = position[3];
                               }
                           }
                           changeOne = stop[3];
                           changeTwo = stop[4];
                           stop[3] = changeTwo;
                           stop[4] = changeOne;
                           if (randomPosition[blockCount] == position[3]) {
                               end[0] = stop[3];
                           }
                           if (randomPosition[blockCount] == position[4]) {
                               end[0] = stop[4];
                           }
                       }
                   }
                   if (randomPosition[blockCount] == position[4]) {
                       if (stop[3] - blockY[blockCount] > 50 && stop[4] - blockY[blockCount] > 50) {
                           for (int s = 0; s < blockCount; s++) {
                               if (randomPosition[s] == position[3]) {
                                   randomPosition[s] = position[4];
                               } else if (randomPosition[s] == position[4]) {
                                   randomPosition[s] = position[3];
                               }
                               if (randomPosition2[s] == position[3]) {
                                   randomPosition2[s] = position[4];
                               } else if (randomPosition2[s] == position[4]) {
                                   randomPosition2[s] = position[3];
                               }
                           }
                           changeOne = stop[3];
                           changeTwo = stop[4];
                           stop[3] = changeTwo;
                           stop[4] = changeOne;
                           if (randomPosition[blockCount] == position[3]) {
                               end[0] = stop[3];
                           }
                           if (randomPosition[blockCount] == position[4]) {
                               end[0] = stop[4];
                           }
                       }
                   }

                   switchFour = false;

               } else if ((randomPosition2[blockCount] == position[3] && randomPosition[blockCount] != position[4])
                       || (randomPosition2[blockCount] == position[4] && randomPosition[blockCount] != position[3])) {
                   if (randomPosition2[blockCount] == position[3]) {
                       if (stop[4] - blockY2[blockCount] > 50 && stop[3] - blockY2[blockCount] > 50) {
                           for (int s = 0; s < blockCount; s++) {
                               if (randomPosition[s] == position[3]) {
                                   randomPosition[s] = position[4];
                               } else if (randomPosition[s] == position[4]) {
                                   randomPosition[s] = position[3];
                               }
                               if (randomPosition2[s] == position[3]) {
                                   randomPosition2[s] = position[4];
                               } else if (randomPosition2[s] == position[4]) {
                                   randomPosition2[s] = position[3];
                               }
                           }
                           changeOne = stop[3];
                           changeTwo = stop[4];
                           stop[3] = changeTwo;
                           stop[4] = changeOne;
                           if (randomPosition2[blockCount] == position[3]) {
                               end[1] = stop[3];
                           }
                           if (randomPosition2[blockCount] == position[4]) {
                               end[1] = stop[4];
                           }
                       }
                   }
                   if (randomPosition2[blockCount] == position[4]) {
                       if (stop[3] - blockY2[blockCount] > 50 && stop[4] - blockY2[blockCount] > 50) {
                           for (int s = 0; s < blockCount; s++) {
                               if (randomPosition[s] == position[3]) {
                                   randomPosition[s] = position[4];
                               } else if (randomPosition[s] == position[4]) {
                                   randomPosition[s] = position[3];
                               }
                               if (randomPosition2[s] == position[3]) {
                                   randomPosition2[s] = position[4];
                               } else if (randomPosition2[s] == position[4]) {
                                   randomPosition2[s] = position[3];
                               }

                           }
                           changeOne = stop[3];
                           changeTwo = stop[4];
                           stop[3] = changeTwo;
                           stop[4] = changeOne;
                           if (randomPosition2[blockCount] == position[3]) {
                               end[1] = stop[3];
                           }
                           if (randomPosition2[blockCount] == position[4]) {
                               end[1] = stop[4];
                           }
                       }
                   }

                   switchFour = false;
               }


               if (randomPosition[blockCount] != position[3] && randomPosition[blockCount] != position[4] &&
                       randomPosition2[blockCount] != position[3] && randomPosition2[blockCount] != position[4]) {
                   for (int s = 0; s < blockCount; s++) {

                       if (randomPosition[s] == position[3]) {
                           randomPosition[s] = position[4];
                       } else if (randomPosition[s] == position[4]) {
                           randomPosition[s] = position[3];
                       }
                       if (randomPosition2[s] == position[3]) {
                           randomPosition2[s] = position[4];
                       } else if (randomPosition2[s] == position[4]) {
                           randomPosition2[s] = position[3];
                       }
                   }
                   changeOne = stop[3];
                   changeTwo = stop[4];
                   stop[3] = changeTwo;
                   stop[4] = changeOne;

                   switchFour = false;
               }


           }
       }

       public void controlFPS() {
           long timeThisFrame =
                   (System.currentTimeMillis() - lastFrameTime);
           long timeToSleep = 15 - timeThisFrame;
           if (timeThisFrame > 0) {
               //fps = (int) (1000 / timeThisFrame);
           }
           if (timeToSleep > 0) {
               try {
                   ourThread.sleep(timeToSleep);
               } catch (InterruptedException e) {
               }
               lastFrameTime = System.currentTimeMillis();
           }
       }

       public void pause() {
           playingGame = false;
           try {
               ourThread.join();
           } catch (InterruptedException e) {
           }
       }

       public void resume() {
           playingGame = true;
           ourThread = new Thread(this);
           ourThread.start();
       }
   }

   @Override
   protected void onStop() {
       super.onStop();
       while (true) {
           gameView.pause();
           break;
       }
       finish();
   }

   @Override
   protected void onPause() {
       super.onPause();
       gameView.pause();
   }

   @Override
   protected void onResume() {
       super.onResume();
       gameView.resume();
   }

   @Override
   public boolean onTouchEvent(MotionEvent motionEvent) {
       switch (motionEvent.getAction() & MotionEvent.ACTION_MASK) {
           case MotionEvent.ACTION_UP:
               if (motionEvent.getX() >= 75 && motionEvent.getX() <= 265 && motionEvent.getY() >= screenHeight / 2) {
                   switchOne = true;
               }
               if (motionEvent.getX() >= 325 && motionEvent.getX() <= 515 && motionEvent.getY() >= screenHeight / 2) {
                   switchTwo = true;
               }
               if (motionEvent.getX() >= 575 && motionEvent.getX() <= 765 && motionEvent.getY() >= screenHeight / 2) {
                   switchThree = true;
               }
               if (motionEvent.getX() >= 825 && motionEvent.getX() <= 1015 && motionEvent.getY() >= screenHeight / 2) {
                   switchFour = true;
               }
               if (motionEvent.getX() >= screenWidth/2 - 150 && motionEvent.getY() >=screenHeight/2 - 300
                       && motionEvent.getX() <= screenWidth/2 + 150 && motionEvent.getY() <= screenHeight/2 - 100) {
                   go = true;
                   gameOver = false;
               }
       }
       return true;
   }


   public void configureDisplay(){
       //find out the width and height of the screen
       Display display = getWindowManager().getDefaultDisplay();
       Point size = new Point();
       display.getSize(size);
       screenWidth = size.x;
       screenHeight = size.y;

       //Load and scale bitmaps
       redBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.red);
       redBitmap = Bitmap.createScaledBitmap(redBitmap, 150, 100, false);
       blueBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.blue);
       blueBitmap = Bitmap.createScaledBitmap(blueBitmap, 150, 100, false);
       yellowBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.yellow);
       yellowBitmap = Bitmap.createScaledBitmap(yellowBitmap, 150, 100, false);
       orangeBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.orange);
       orangeBitmap = Bitmap.createScaledBitmap(orangeBitmap, 150, 100, false);
       purpleBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.purple);
       purpleBitmap = Bitmap.createScaledBitmap(purpleBitmap, 150, 100, false);
       greenBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.green);
       greenBitmap = Bitmap.createScaledBitmap(greenBitmap, 150, 100, false);
       switchbuttonBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.switchbutton);
       switchbuttonBitmap = Bitmap.createScaledBitmap(switchbuttonBitmap, 190, 160, false);
       switchRedBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.switchbuttonred);
       switchRedBitmap = Bitmap.createScaledBitmap(switchRedBitmap, 285, 180, false);
       switchBlueBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.switchbuttonblue);
       switchBlueBitmap = Bitmap.createScaledBitmap(switchBlueBitmap, 270, 180, false);
       switchYellowBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.switchbuttonyellow);
       switchYellowBitmap = Bitmap.createScaledBitmap(switchYellowBitmap, 260, 180, false);
       switchGreenBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.switchbuttongreen);
       switchGreenBitmap = Bitmap.createScaledBitmap(switchGreenBitmap, 260, 180, false);
       blackBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.black);
       blackBitmap = Bitmap.createScaledBitmap(blackBitmap, 350, 300, false);
